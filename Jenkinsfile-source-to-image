
// The name you want to give your Spring Boot application
// Each resource related to your app will be given this name

// The name you want to give your Spring Boot application
// Each resource related to your app will be given this name


pipeline {
    // Use the 'maven' Jenkins agent image which is provided with OpenShift 
    agent any
    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub-cred')
	    NEXUSDOCKER_CREDENTIALS=credentials('nexusdocker-cred')
		APP_NAME = "hello-java-spring-boot"
		NEXUS_SERVER="172.31.30.2"
		OPENSHIFT_SERVER="172.31.27.112:8443"
		OC_TOKEN="y62sWUSqvchbWZJwYAqWkII2dG3hrnFhDBpiJ36h5Fc"
		ARTIFACT_ID="01-springboot"
		APP_JAR_PATH="hello-java-spring-boot-0.0.1-SNAPSHOT.jar"

		OPENSHIFT_APP_NAME="springboot-from-build"
		OPENSHIFT_NAMESPACE_DEV = "coe-devops"
        OPENSHIFT_IMAGE_NAME = 'ubi8-openjdk-11:1.3' 
	}
    stages {
    
        stage('Construir aplicación') {
          steps {
            // Puedes elegir Maven o Gradle según tu proyecto
            sh 'mvn clean package'
          }
        }

        stage('Upload Artifact to Nexus') {
			steps {
				nexusArtifactUploader artifacts: [[artifactId: "${ARTIFACT_ID}",
								classifier: '',
								file: "target/${APP_JAR_PATH}",
								type: 'jar']],
					credentialsId: 'nexus-credentials',
					groupId: 'springboot',
					nexusUrl: "${NEXUS_SERVER}" + ":" + "8081",
					nexusVersion: 'nexus3',
					protocol: 'http',
					repository: 'spring-ms-app',
					version: "${BUILD_NUMBER}"		  
			}
       }

	  stage('Build Image') {
            steps {
                echo "Inicia BuildImage"
                script {
           
                        
                       sh "oc login --token=${OC_TOKEN} ${OPENSHIFT_SERVER} --insecure-skip-tls-verify=true"
                       sh "oc project ${OPENSHIFT_NAMESPACE_DEV}" 
                       sh "oc delete bc/${OPENSHIFT_APP_NAME} --ignore-not-found=true -n ${OPENSHIFT_NAMESPACE_DEV}"
                       sh "oc delete is/${OPENSHIFT_APP_NAME} --ignore-not-found=true -n ${OPENSHIFT_NAMESPACE_DEV}"
                       sh "oc delete dc/${OPENSHIFT_APP_NAME} --ignore-not-found=true -n ${OPENSHIFT_NAMESPACE_DEV}"
                       sh "oc delete all -l app=${OPENSHIFT_APP_NAME} -n ${OPENSHIFT_NAMESPACE_DEV}"

                         //Obtener version del artefacto 
                        def pom = readMavenPom file: 'pom.xml'
                        def version = pom.version
                        tagImage = pom.version + "-" + currentBuild.number
                                
                        artifactName = pom.artifactId
						artifactVersion = pom.version
						def nameJar = artifactName + "-" + artifactVersion + ".jar"

                        echo "${tagImage}"
                        echo "${nameJar}"
                        //set
                        sh "oc new-build --binary=true  --strategy=source --name='${OPENSHIFT_APP_NAME}' --image-stream=${OPENSHIFT_IMAGE_NAME} -n ${OPENSHIFT_NAMESPACE_DEV}"
                        //start build
                        sh "oc start-build ${OPENSHIFT_APP_NAME} --from-file=./target/${nameJar} --wait=true -n ${OPENSHIFT_NAMESPACE_DEV}"
                        sh "oc tag ${OPENSHIFT_APP_NAME}:latest ${OPENSHIFT_APP_NAME}:${tagImage} -n ${OPENSHIFT_NAMESPACE_DEV}"
                }
                echo "Termina BuildImage"
            }
        }
      
     // Deploy image
        stage('Deploy to OC') {
            steps {
                echo "Inicia DeployImage"
                script {
                        //new app
                        sh "oc new-app ${OPENSHIFT_NAMESPACE_DEV}/${OPENSHIFT_APP_NAME}:latest --name=${OPENSHIFT_APP_NAME} --allow-missing-imagestream-tags=true -n ${OPENSHIFT_NAMESPACE_DEV}"
                        sh "oc set resources dc ${OPENSHIFT_APP_NAME} --limits=memory=200Mi,cpu=100m --requests=memory=100Mi,cpu=50m -n ${OPENSHIFT_NAMESPACE_DEV}"
                        sh "oc set env dc/${OPENSHIFT_APP_NAME} TZ=America/Santo_Domingo -n ${OPENSHIFT_NAMESPACE_DEV}"
                        //sh "oc expose dc ${OPENSHIFT_APP_NAME} --port ${OPENSHIFT_MS_PORT} -n ${OPENSHIFT_NAMESPACE_DEV}"
                        sh "oc create route edge --service=${OPENSHIFT_APP_NAME} -n ${OPENSHIFT_NAMESPACE_DEV}"
                }
                echo "Termina Deploy"
            }
        }
	 
    }
}
